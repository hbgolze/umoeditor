# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-02 01:54
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField()),
                ('problem_label', models.CharField(blank=True, max_length=20)),
                ('comment_number', models.IntegerField(default=1)),
                ('author_name', models.CharField(blank=True, max_length=50)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty', models.IntegerField(blank=True, null=True)),
                ('label', models.CharField(max_length=20)),
                ('problem_text', models.TextField(blank=True)),
                ('problem_latex', models.TextField(blank=True)),
                ('top_solution_number', models.IntegerField(blank=True, null=True)),
                ('author_name', models.CharField(blank=True, max_length=50)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('comments', models.ManyToManyField(blank=True, to='problemeditor.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PN', 'Propose for Current Year'), ('PF', 'Propose for Future Year'), ('MI', 'Needs Minor Revision'), ('MJ', 'Needs Major Revision'), ('TR', 'Trash')], default='PN', max_length=2)),
                ('author_name', models.CharField(blank=True, max_length=50)),
                ('approval_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solution_text', models.TextField()),
                ('solution_latex', models.TextField()),
                ('solution_number', models.IntegerField(default=1)),
                ('problem_label', models.CharField(blank=True, max_length=20)),
                ('authors', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(blank=True, max_length=20)),
                ('top_index', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='problem',
            name='problem_status',
            field=models.ManyToManyField(blank=True, to='problemeditor.ProblemStatus'),
        ),
        migrations.AddField(
            model_name='problem',
            name='solutions',
            field=models.ManyToManyField(blank=True, to='problemeditor.Solution'),
        ),
        migrations.AddField(
            model_name='problem',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='problemeditor.Topic'),
        ),
    ]
